/*
 * @blinkmobile/angular-camera: v1.1.0 | https://github.com/blinkmobile/angular-camera#readme
 * (c) 2017 Blink Mobile Technologies | Released under the MIT license
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t():"function"==typeof define&&define.amd?define(t):t()}(this,function(){"use strict";function e(e,t,n,r){function a(){var e=d.cameraOptions&&d.cameraOptions.video||{},t={width:{exact:+d.width},height:{exact:+d.height}},n=Object.assign({},e,t);return{audio:!1,video:n}}function o(){return Object.assign({},d.cameraOptions,{targetWidth:d.width,targetHeight:d.height})}function i(){d.cameraOptions=v(),d.camera.defaultConstraints=d.cameraOptions}var d=this,h=!1,v=function(){return d.webRTC?a():o()};d.$onInit=function(){d.videoEl=t.find("video")[0],d.imgEl=t[0].querySelector("[camera-target]"),d.camera=r(d.videoEl),d.onCameraOpen=d.onCameraOpen||function(){},d.onCameraError=d.onCameraError||function(){},d.isCameraOpen=!1,d.webRTC=!!d.camera.close,d.width=d.width||c,d.height=d.height||s,d.thumbWidth=d.thumbWidth||l,d.thumbHeight=d.thumbHeight||u,i(d.cameraOptions),h=!0},d.$onChanges=function(e){if(e){for(var t in e)"cameraOptions"===t?i(e[t].currentValue):d[t]=e[t].currentValue;h&&(i(d.cameraOptions),d.isCameraOpen&&(d.camera.close(),d.openCamera()))}},d.openCamera=function(){return d.camera.open().then(function(){return d.camera.getDevices()}).then(function(){return e.$apply(function(){d.isCameraOpen=d.webRTC,d.error=null,d.onCameraOpen({videoEl:d.videoEl})})}).catch(function(t){e.$apply(function(){d.error="NotAllowedError"===t.name?"You must grant access to your webcam to take photos":null,console.warn("There was an error opening the camera: "+t),d.onCameraError({err:t})})})},d.closeCamera=function(){d.camera.close&&d.camera.close(),d.isCameraOpen=!1},d.takePhoto=function(){return d.isCameraOpen=!1,d.camera.getPicture().then(function(t){e.$apply(function(){d.ngModel.$setViewValue(t),d.closeCamera()})}).catch(function(e){d.error=e.toString(),console.warn("There was an error opening the camera: "+e),d.onCameraError({err:e})})},d.clearImage=function(){n.confirm(m)&&d.ngModel.$setViewValue(null)},d.useDevice=function(){d.selectedDevice&&d.camera.useDevice(d.selectedDevice)}}function t(){this.availableDevices=[{deviceId:Camera.Direction.BACK,label:"Rear Camera"},{deviceId:Camera.Direction.FRONT,label:"Front Camera"}],this.defaultConstraints={cameraDirection:Camera.Direction.BACK,quality:50,destinationType:Camera.DestinationType.FILE_URI,encodingType:Camera.EncodingType.PNG,sourceType:Camera.PictureSourceType.CAMERA,correctOrientation:!0},v.set(this,{result:null})}function n(){for(var e=arguments.length,n=Array(e),r=0;r<e;r++)n[r]=arguments[r];return n.unshift(null),new(t.bind.apply(t,n))}function r(e){if(!e)throw new TypeError("WebRTCCamera expects a video element during instansiation");this.defaultConstraints={video:!0,audio:!1},this.availableDevices=[],g.set(this,{videoEl:e,stream:null,videoTrack:null,authorised:!1,result:null})}function a(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.unshift(null),new(r.bind.apply(r,t))}function o(){for(var e=!(!window.Camera||!navigator.camera),t=arguments.length,r=Array(t),o=0;o<t;o++)r[o]=arguments[o];return e?n.apply(null,r):a.apply(null,r)}function i(){return function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return o.apply(o,t)}}var c=640,s=480,l=320,u=240,m="Are you sure you want to clear?";e.$inject=["$scope","$element","$window","Camera"];var d='<div class="bm-camera">\n  <div class="bm-camera__video-image-container">\n    <figure class="bm-camera__video-container">\n    <video class="bm-camera__video" autoplay width="{{$ctrl.width}}" height="{{$ctrl.height}}" ng-show="$ctrl.isCameraOpen" width="{{$ctrl.width}}" height="{{$ctrl.height}}"></video>\n    </figure>\n    <figure class="bm-camera__image-container">\n      <img ng-src="{{$ctrl.ngModel.$viewValue}}" camera-target width="{{$ctrl.thumbWidth}}" height="{{$ctrl.thumbHeight}}" ng-show="$ctrl.ngModel.$viewValue" class="bm-camera__image ng-hide">\n    </figure>\n    <!-- allows the developer to include their own image manipulation controls -->\n    <div ng-transclude></div>\n  </div>\n  <div class="bm-camera__selector-container" ng-show="$ctrl.camera.availableDevices.length > 1">\n    <select class="bm-camera__selector" ng-model="$ctrl.selectedDevice" ng-options="device.label for device in $ctrl.camera.availableDevices" ng-change="$ctrl.useDevice()">\n\n    </select>\n  </div>\n  <div ng-if="$ctrl.webRTC" class="bm-camera__button-container">\n    <button class="bm-button bm-button__clear-photo" name="take-photo" ng-click="$ctrl.clearImage()" ng-show="$ctrl.ngModel.$viewValue">Clear</button>\n    <button class="bm-button bm-button__open" name="open-camera" ng-click="$ctrl.openCamera()" ng-hide="$ctrl.isCameraOpen">Open Camera</button>\n    <button class="bm-button bm-button__close ng-hide" name="close-camera" ng-click="$ctrl.closeCamera()" ng-show="$ctrl.isCameraOpen">Close Camera</button>\n    <button class="bm-button bm-button__take-photo" name="take-photo" ng-click="$ctrl.takePhoto()" ng-show="$ctrl.isCameraOpen">Take Photo</button>\n\n    <div class="bm-error" ng-show="$ctrl.error">\n      <p class="bm-error__text">{{::$ctrl.error}}</p>\n    </div>\n  </div>\n  <div ng-if="!$ctrl.webRTC" class="bm-camera__button-container">\n    <button class="bm-button bm-button__clear-photo" name="take-photo" ng-click="$ctrl.clearImage()" ng-show="$ctrl.ngModel.$viewValue">Clear</button>\n    <button class="bm-button bm-button__take-photo" name="open-camera" ng-click="$ctrl.takePhoto()">Take Photo</button>\n  </div>\n</div>\n',h={controller:e,template:d,transclude:!0,require:{ngModel:"ngModel"},bindings:{width:"@?",height:"@?",thumbWidth:"@?",thumbHeight:"@?",cameraOptions:"<?",onCameraError:"&?",onCameraOpen:"&?"}},v=new WeakMap;t.prototype.getDevices=function(){return Promise.resolve(this.availableDevices)},t.prototype.useDevice=function(e){if(!("deviceId"in e))throw new TypeError("Invalid device selected, must be of type MediaDeviceInfo");this.defaultConstraints.cameraDirection=e.deviceId},t.prototype.open=function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.defaultConstraints;return t=Object.assign({},this.defaultConstraints,t),new Promise(function(n,r){var a=function(t){v.get(e).result=t,n(t)};navigator.camera.getPicture(a,r,t)})},t.prototype.getPicture=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.defaultConstraints,t=v.get(this);return t.result?Promise.resolve(t.result):this.open(e).then(function(){var e=t.result;return t.result=null,e})};var p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},g=new WeakMap;r.prototype.useDevice=function(e){if(this.close(),!("deviceId"in e))throw new TypeError("Invalid device selected, must be of type MediaDeviceInfo");var t="object"===p(this.defaultConstraints.video)?this.defaultConstraints.video:{};return t.deviceId={exact:e.deviceId},this.defaultConstraints.video=t,this.open()},r.prototype.getDevices=function(){var e=this;return g.get(this).authorised?navigator.mediaDevices&&navigator.mediaDevices.enumerateDevices?navigator.mediaDevices.enumerateDevices().then(function(t){return e.availableDevices=t.filter(function(e){return"videoinput"===e.kind.toLowerCase()}),e.availableDevices}):Promise.reject(new Error("Media Devices API not supported in this browser")):Promise.resolve([])},r.prototype.open=function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.defaultConstraints;return t=Object.assign({},this.defaultConstraints,t),new Promise(function(n,r){getUserMedia(t,function(t,a){if(t)return r(t);var o=a.getVideoTracks(),i=g.get(e);return i.authorised=!0,o.length?(i.videoEl.addEventListener("canplay",n,{once:!0}),i.videoTrack=o[0],i.stream=a,void(i.videoEl.srcObject=a)):(i.stream=null,i.videoTrack=null,r(new Error("Could not get a video track from stream")))})})},r.prototype.getPicture=function(){if(!g.get(this).authorised)return Promise.reject(new DOMException("User has not authorised use of the camera","NotAllowedError"));var e=g.get(this),t=document.createElement("canvas"),n=t.getContext("2d"),r=e.videoEl;return t.width=r.videoWidth,t.height=r.videoHeight,n.drawImage(e.videoEl,0,0),Promise.resolve(t.toDataURL("image/png"))},r.prototype.close=function(){var e=g.get(this).videoTrack;e&&e.stop()},angular.module("bmCamera",[]).service("Camera",i).component("bmCamera",h)});