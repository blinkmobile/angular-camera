/*
 * @blinkmobile/angular-camera: v1.1.0
 * https://github.com/blinkmobile/angular-camera#readme
 *
 * Copyright 2017 Blink Mobile Technologies
 * Released under the MIT license
 *
 * An angular wrapper around @blinkmobile/camera
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t():"function"==typeof define&&define.amd?define(t):t()}(this,function(){"use strict";function e(e,t,n){function r(){var e=i.cameraOptions&&i.cameraOptions.video||{},t={width:{exact:+i.width},height:{exact:+i.height}},n=Object.assign({},e,t);return{audio:!1,video:n}}function a(){return Object.assign({},i.cameraOptions,{targetWidth:i.width,targetHeight:i.height})}function o(){i.cameraOptions=d(),i.camera.defaultConstraints=i.cameraOptions}var i=this,m=!1,d=function(){return i.webRTC?r():a()};i.$onInit=function(){i.videoEl=t.find("video")[0],i.imgEl=t[0].querySelector("[camera-target]"),i.camera=n(i.videoEl),i.onCameraOpen=i.onCameraOpen||function(){},i.onCameraError=i.onCameraError||function(){},i.isCameraOpen=!1,i.webRTC=!!i.camera.close,i.width=i.width||c,i.height=i.height||s,i.thumbWidth=i.thumbWidth||l,i.thumbHeight=i.thumbHeight||u,o(i.cameraOptions),m=!0},i.$onChanges=function(e){if(e){for(var t in e)"cameraOptions"===t?o(e[t].currentValue):i[t]=e[t].currentValue;m&&(o(i.cameraOptions),i.isCameraOpen&&(i.camera.close(),i.openCamera()))}},i.openCamera=function(){return i.camera.open().then(function(){return i.camera.getDevices()}).then(function(){return e.$apply(function(){i.isCameraOpen=i.webRTC,i.error=null,i.onCameraOpen({videoEl:i.videoEl})})}).catch(function(t){e.$apply(function(){i.error="NotAllowedError"===t.name?"You must grant access to your webcam to take photos":null,console.warn("There was an error opening the camera: "+t),i.onCameraError({err:t})})})},i.closeCamera=function(){i.camera.close&&i.camera.close(),i.isCameraOpen=!1},i.takePhoto=function(){return i.isCameraOpen=!1,i.camera.getPicture().then(function(t){e.$apply(function(){i.ngModel.$setViewValue(t),i.closeCamera()})}).catch(function(e){i.error=e.toString(),console.warn("There was an error opening the camera: "+e),i.onCameraError({err:e})})},i.clearImage=function(){i.ngModel.$setViewValue(null)},i.useDevice=function(){i.selectedDevice&&i.camera.useDevice(i.selectedDevice)}}function t(){this.availableDevices=[{deviceId:Camera.Direction.BACK,label:"Rear Camera"},{deviceId:Camera.Direction.FRONT,label:"Front Camera"}],this.defaultConstraints={cameraDirection:Camera.Direction.BACK,quality:50,destinationType:Camera.DestinationType.FILE_URI,encodingType:Camera.EncodingType.PNG,sourceType:Camera.PictureSourceType.CAMERA,correctOrientation:!0},h.set(this,{result:null})}function n(){for(var e=arguments.length,n=Array(e),r=0;r<e;r++)n[r]=arguments[r];return n.unshift(null),new(t.bind.apply(t,n))}function r(e){if(!e)throw new TypeError("WebRTCCamera expects a video element during instansiation");this.defaultConstraints={video:!0,audio:!1},this.availableDevices=[],p.set(this,{videoEl:e,stream:null,videoTrack:null,authorised:!1,result:null})}function a(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.unshift(null),new(r.bind.apply(r,t))}function o(){for(var e=!(!window.Camera||!navigator.camera),t=arguments.length,r=Array(t),o=0;o<t;o++)r[o]=arguments[o];return e?n.apply(null,r):a.apply(null,r)}function i(){return function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return o.apply(o,t)}}var c=640,s=480,l=128,u=96;e.$inject=["$scope","$element","Camera"];var m='<div class="bm-camera">\n  <div class="bm-camera__image-container">\n    <video class="bm-camera__video" autoplay width="{{$ctrl.width}}" height="{{$ctrl.height}}" ng-show="$ctrl.isCameraOpen" width="{{$ctrl.width}}" height="{{$ctrl.height}}"></video>\n    <figure>\n      <img ng-src="{{$ctrl.ngModel.$viewValue}}" camera-target width="{{$ctrl.thumbWidth}}" height="{{$ctrl.thumbHeight}}" ng-show="$ctrl.ngModel.$viewValue" class="bm-camera__image ng-hide">\n    </figure>\n    <!-- allows the developer to include their own image manipulation controls -->\n    <div ng-transclude></div>\n  </div>\n  <div class="bm-camera__selector-container" ng-show="$ctrl.camera.availableDevices.length > 1">\n    <select class="bm-camera__selector" ng-model="$ctrl.selectedDevice" ng-options="device.label for device in $ctrl.camera.availableDevices" ng-change="$ctrl.useDevice()">\n\n    </select>\n  </div>\n  <div ng-if="$ctrl.webRTC" class="bm-camera__button-container">\n    <button class="bm-button bm-button__clear-photo" name="take-photo" ng-click="$ctrl.clearImage()" ng-show="$ctrl.ngModel.$viewValue">Clear</button>\n    <button class="bm-button bm-button__open" name="open-camera" ng-click="$ctrl.openCamera()" ng-hide="$ctrl.isCameraOpen">Open Camera</button>\n    <button class="bm-button bm-button__close ng-hide" name="close-camera" ng-click="$ctrl.closeCamera()" ng-show="$ctrl.isCameraOpen">Close Camera</button>\n    <button class="bm-button bm-button__take-photo" name="take-photo" ng-click="$ctrl.takePhoto()" ng-show="$ctrl.isCameraOpen">Take Photo</button>\n\n    <div class="bm-error" ng-show="$ctrl.error">\n      <p class="bm-error__text">{{::$ctrl.error}}</p>\n    </div>\n  </div>\n  <div ng-if="!$ctrl.webRTC" class="bm-camera__button-container">\n    <button class="bm-button bm-button__clear-photo" name="take-photo" ng-click="$ctrl.clearImage()" ng-show="$ctrl.ngModel.$viewValue">Clear</button>\n    <button class="bm-button bm-button__take-photo" name="open-camera" ng-click="$ctrl.takePhoto()">Take Photo</button>\n  </div>\n</div>\n',d={controller:e,template:m,transclude:!0,require:{ngModel:"ngModel"},bindings:{width:"@?",height:"@?",thumbWidth:"@?",thumbHeight:"@?",cameraOptions:"<?",onCameraError:"&?",onCameraOpen:"&?"}},h=new WeakMap;t.prototype.getDevices=function(){return Promise.resolve(this.availableDevices)},t.prototype.useDevice=function(e){if(!("deviceId"in e))throw new TypeError("Invalid device selected, must be of type MediaDeviceInfo");this.defaultConstraints.cameraDirection=e.deviceId},t.prototype.open=function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.defaultConstraints;return t=Object.assign({},this.defaultConstraints,t),new Promise(function(n,r){var a=function(t){h.get(e).result=t,n(t)};navigator.camera.getPicture(a,r,t)})},t.prototype.getPicture=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.defaultConstraints,t=h.get(this);return t.result?Promise.resolve(t.result):this.open(e).then(function(){var e=t.result;return t.result=null,e})};var v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},p=new WeakMap;r.prototype.useDevice=function(e){if(this.close(),!("deviceId"in e))throw new TypeError("Invalid device selected, must be of type MediaDeviceInfo");var t="object"===v(this.defaultConstraints.video)?this.defaultConstraints.video:{};return t.deviceId={exact:e.deviceId},this.defaultConstraints.video=t,this.open()},r.prototype.getDevices=function(){var e=this;return p.get(this).authorised?navigator.mediaDevices&&navigator.mediaDevices.enumerateDevices?navigator.mediaDevices.enumerateDevices().then(function(t){return e.availableDevices=t.filter(function(e){return"videoinput"===e.kind.toLowerCase()}),e.availableDevices}):Promise.reject(new Error("Media Devices API not supported in this browser")):Promise.resolve([])},r.prototype.open=function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.defaultConstraints;return t=Object.assign({},this.defaultConstraints,t),new Promise(function(n,r){getUserMedia(t,function(t,a){if(t)return r(t);var o=a.getVideoTracks(),i=p.get(e);return i.authorised=!0,o.length?(i.videoEl.addEventListener("canplay",n,{once:!0}),i.videoTrack=o[0],i.stream=a,void(i.videoEl.srcObject=a)):(i.stream=null,i.videoTrack=null,r(new Error("Could not get a video track from stream")))})})},r.prototype.getPicture=function(){if(!p.get(this).authorised)return Promise.reject(new DOMException("User has not authorised use of the camera","NotAllowedError"));var e=p.get(this),t=document.createElement("canvas"),n=t.getContext("2d"),r=e.videoEl;return t.width=r.videoWidth,t.height=r.videoHeight,n.drawImage(e.videoEl,0,0),Promise.resolve(t.toDataURL("image/png"))},r.prototype.close=function(){var e=p.get(this).videoTrack;e&&e.stop()},angular.module("bmCamera",[]).service("Camera",i).component("bmCamera",d)});